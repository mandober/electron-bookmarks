// --------------------------------------------------------------------- import
import curry from '../f/curry.js'

// ----------------------------------------------------------------- definition
// foldl :: (b -> a -> b) -> b -> [a] -> b
const foldl = curry((f, e, [x, ...xs]) =>
    x === undefined
        ? e
        : foldl(f, (curry(f)(e)(x)), xs)
);

// --------------------------------------------------------------------- export
export default foldl




// ------------------------------------------------------------------------ alt
/*
    foldl :: Foldable t => (b -> a -> b) -> b -> t a -> b
    foldl _ acc []     = acc
    foldl f acc (x:xs) = foldl f (f acc x) xs
*/



// ---------------------------------------------------------------------- check
/*
console.log(
    '\n',
    foldl( (a, b) => a**b ) (2) ( [2,4] ), '\n',
    foldl( (a, b) => a**b ,  2  , [2,4] ), '\n',

    foldl(a => b => a**b ,  2  , [2,4] ), '\n',


    // foldr( (a,b)=>a**b ) (2) ( [2,4] ), '\n',
    // foldl( (a,b)=>a+b ) ('-') ( ['a','b','c'] ), '\n',
    // foldr( (a,b)=>a+b ) ('_') ( ['a','b','c'] ), '\n',

    // foldl( (a,b)=>[...a,b] ) ([1]) ( ['a','b','c'] ), '\n',
    // foldr( (a,b)=>[...a,b] ) ([2]) ( ['a','b','c'] ), '\n',
)
*/
